package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;

/**
 * Created by shrey on 2017-11-02.
 */

@TeleOp(name="Claw", group="group")
@Disabled

public class clawSubsystem extends LinearOpMode{

    private HardwarePushBot robot = new HardwarePushBot();
    public ElapsedTime runTime =  new ElapsedTime();
    public DcMotor claw = null;


    public int moveBy(int angleDefined){
        int ticks = angleDefined * 4;
        return ticks;
    }

    public void moveToAngle(int angle, double speed) {
        claw.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        claw.setTargetPosition(angle);
        claw.setPower(speed);
    }

    @Override
    public void runOpMode() throws InterruptedException {

        //Intialize the robot's hardware from HardwareMap amd allows you to run all this code within TeleOp
        robot.init(hardwareMap);

        telemetry.addData("Status", "Initialized");
        telemetry.addData("Hello Driver", "Press Play Button");
        telemetry.update();


        claw = hardwareMap.dcMotor.get("claw");

        claw.setDirection(DcMotor.Direction.REVERSE);

        waitForStart();

        // run until the end of the match (driver presses STOP)

        //Define the 'angle targets' using the calculation method of angles
        int openAngle = claw.getCurrentPosition() + moveBy(45);
        int closeAngle = claw.getCurrentPosition() + moveBy(45);

        while (opModeIsActive()) {
            if(gamepad2.y){     //if the y button on gamepad2 is pressed the claw will open
                moveToAngle(openAngle, 0.3);
            }
            if(gamepad2.x){     //if the x button on gamepad2 is pressed the claw will close
                moveToAngle(closeAngle, -0.3);
            }


            // Show the elapsed game time and wheel power.
            telemetry.addData("Status", "Run Time: " + runTime.toString());
            telemetry.addData("Motors", "power (%.2f)");
            telemetry.addData("Right_Stick_y", gamepad1.right_stick_y);
            telemetry.addData("Open: ", openAngle);
            telemetry.addData("Close: ", closeAngle);
            telemetry.addData("Left_Stick_x", gamepad1.left_stick_x);
            telemetry.update();
        }
    }


    }
}
